variables:
  CI_IMAGE_PATH: registry.gitlab.com/charlie.field98/back-end
  API_COMMON_CI_IMAGE_NAME: $CI_IMAGE_PATH/api-common-ci-image
  API_REST_CI_IMAGE_NAME: $CI_IMAGE_PATH/api-rest-ci-image
  DATA_PIPELINE_CI_IMAGE_NAME: $CI_IMAGE_PATH/data-pipeline-ci-image
  AWS_DEFAULT_REGION: eu-west-2
  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY

stages:
  - Ci_Setup
  - Lint
  - Test
  - Build_Deploy

# Stage: "CI Setup"
# ----------------------------------------------------------------------------------------------------------------------
build-api-common-ci-image:
  stage: Ci_Setup
  image: docker
  services:
    - docker:dind
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker build -t $API_COMMON_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG -f docker/api_common/Dockerfile -t $API_COMMON_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG .
    - docker push $API_COMMON_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG
  rules:
    - changes:
      - docker/**/*
      - .gitlab-ci.yml
      - api.common/**/*

build-api-rest-ci-image:
  stage: Ci_Setup
  image: docker
  services:
    - docker:dind
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker build -t $API_REST_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG -f docker/api_rest/Dockerfile -t $API_REST_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG .
    - docker push $API_REST_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG
  rules:
    - changes:
      - docker/**/*
      - .gitlab-ci.yml
      - api.common/**/*
      - api.rest/**/*

build-data-pipeline-ci-image:
  stage: Ci_Setup
  image: docker
  services:
    - docker:dind
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker build -t $DATA_PIPELINE_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG -f docker/data_pipeline/Dockerfile -t $DATA_PIPELINE_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG .
    - docker push $DATA_PIPELINE_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG
  rules:
    - changes:
      - docker/**/*
      - .gitlab-ci.yml
      - api.common/**/*
      - data.pipeline/**/*

# Stage: Lint
# ----------------------------------------------------------------------------------------------------------------------
lint-api-common:
  stage: Lint
  tags:
    - saas-linux-small-amd64
  image:
    name: $API_COMMON_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG
  script:
  - cd api.common
  - python -m pip install pycodestyle==2.8.0
  - pycodestyle --config=.pycodestyle loop
  rules:
    - changes:
      - api.common/**/*
      - .gitlab-ci.yml

lint-api-rest:
  stage: Lint
  tags:
    - saas-linux-small-amd64
  image:
    name: $API_REST_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG
  script:
  - cd api.rest
  - python -m pip install pycodestyle==2.8.0
  - pycodestyle --config=.pycodestyle loop-api --exclude=loop-api/vendor
  - pycodestyle --config=.pycodestyle auth-api --exclude=auth-api/vendor
  rules:
    - changes:
      - api.rest/**/*
      - .gitlab-ci.yml

lint-data-pipeline:
  stage: Lint
  tags:
    - saas-linux-small-amd64
  image:
    name: $DATA_PIPELINE_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG
  script:
  - cd data.pipeline
  - python -m pip install pycodestyle==2.8.0
  - pycodestyle --config=.pycodestyle lambdas
  rules:
    - changes:
      - data.pipeline/**/*
      - .gitlab-ci.yml

# Stage: Test
# ----------------------------------------------------------------------------------------------------------------------
test-api-common:
  stage: Test
  tags:
    - saas-linux-small-amd64
  variables:
    ENVIRONMENT: test
  image:
    name: $API_COMMON_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG
  script:
  - cd api.common
  - python setup.py sdist bdist_wheel
  - python -m pip install pytest==8.1.1 pytest-cov==5.0.0
  - python -m pip install pyopenssl --upgrade
  - make test
  rules:
    - changes:
      - api.common/**/*
      - .gitlab-ci.yml
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
      when: always
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "staging"'
      when: always
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "production"'
      when: always

test-api-rest:
  stage: Test
  tags:
    - saas-linux-small-amd64
  variables:
    ENVIRONMENT: test
    LOOP_AUTH_DISABLED: 1
    TEST: 1
  before_script:
    - cd api.rest
  image:
    name: $API_REST_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG
  script:
    - python -m pip install pytest==8.1.1 pytest-cov==5.0.0
    - python -m pip install pyopenssl --upgrade
    - make test
  rules:
    - changes:
      - docker/**/*
      - api.common/**/*
      - api.rest/**/*
      - .gitlab-ci.yml
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
      when: always
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "staging"'
      when: always
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "production"'
      when: always

test-data-pipeline:
  stage: Test
  tags:
    - saas-linux-small-amd64
  variables:
    ENVIRONMENT: test
    LOOP_AUTH_DISABLED: 1
    TEST: 1
  before_script:
    - cd api.common
    - python setup.py sdist bdist_wheel
    - python -m pip install dist/loop-1.0.tar.gz
    - cd ../data.pipeline/
    - python -m pip install pytest==8.1.1 pytest-cov==5.0.0
    - python -m pip install pyopenssl --upgrade
  image:
    name: $DATA_PIPELINE_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG
  script:
    - make test
  rules:
    - changes:
      - docker/**/*
      - api.common/**/*
      - api.rest/**/*
      - .gitlab-ci.yml
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
      when: always
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "staging"'
      when: always
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "production"'
      when: always

# Stage: "Build/Deploy"
# ======================================================================================================================
# Develop
# ----------------------------------------------------------------------------------------------------------------------
deploy-api-rest-develop:
  stage: Build_Deploy
  tags:
    - saas-linux-small-amd64
  image:
    name: $API_REST_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG
  script:
  # Install package and dependencies (e.g. boto) for api.common
  - cd api.common
  - python -m pip install pyopenssl --upgrade
  - python setup.py install
  - python -m loop.secrets_generator
  # Generate artifact
  - python setup.py sdist bdist_wheel
  # Build the chalice app
  - cd ../api.rest
  - make clean
  - make build STAGE=develop
  # Deploy to AWS
  - make deploy STAGE=develop
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
      - docker/**/*
      - api.rest/**/*
      - api.common/**/*
      - .gitlab-ci.yml
      when: manual

deploy-auth-api-rest-develop:
  stage: Build_Deploy
  tags:
    - saas-linux-small-amd64
  image:
    name: $API_REST_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG
  script:
  # Install package and dependencies (e.g. boto) for api.common
  - cd api.common
  - python -m pip install pyopenssl --upgrade
  - python setup.py install
  - python -m loop.secrets_generator
  # Generate artifact
  - python setup.py sdist bdist_wheel
  # Build the chalice app
  - cd ../api.rest
  - make clean-auth
  - make build-auth STAGE=develop
  # Deploy to AWS
  - make deploy-auth STAGE=develop
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
      - docker/**/*
      - api.rest/**/*
      - api.common/**/*
      - .gitlab-ci.yml
      when: manual

deploy-data-pipeline-develop:
  stage: Build_Deploy
  tags:
    - saas-linux-small-amd64
  image:
    name: $DATA_PIPELINE_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG
  script:
  - cd api.common
  - python -m pip install pyopenssl --upgrade
  - python setup.py install
  - python -m loop.secrets_generator
  - python setup.py sdist bdist_wheel
  - cd ../data.pipeline
  - python -m pip install aws-sam-cli==1.37.0
  - make deploy Environment=develop
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
      - docker/**/*
      - data.pipeline/**/*
      - api.common/**/*
      - .gitlab-ci.yml
      when: manual

# Staging
# ----------------------------------------------------------------------------------------------------------------------
deploy-api-rest-staging:
  stage: Build_Deploy
  tags:
    - saas-linux-small-amd64
  image:
    name: $API_REST_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG
  script:
  # Install package and dependencies (e.g. boto) for api.common
  - cd api.common
  - python -m pip install pyopenssl --upgrade
  - python setup.py install
  - python -m loop.secrets_generator
  # Generate artifact
  - python setup.py sdist bdist_wheel
  # Build the chalice app
  - cd ../api.rest
  - make clean
  - make build STAGE=staging
  # Deploy to AWS
  - make deploy STAGE=staging
  rules:
    - if: '$CI_COMMIT_BRANCH == "staging"'
      changes:
      - docker/**/*
      - api.rest/**/*
      - api.common/**/*
      - .gitlab-ci.yml
      when: manual

deploy-auth-api-rest-staging:
  stage: Build_Deploy
  tags:
    - saas-linux-small-amd64
  image:
    name: $API_REST_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG
  script:
  # Install package and dependencies (e.g. boto) for api.common
  - cd api.common
  - python -m pip install pyopenssl --upgrade
  - python setup.py install
  - python -m loop.secrets_generator
  # Generate artifact
  - python setup.py sdist bdist_wheel
  # Build the chalice app
  - cd ../api.rest
  - make clean-auth
  - make build-auth STAGE=staging
  # Deploy to AWS
  - make deploy-auth STAGE=staging
  rules:
    - if: '$CI_COMMIT_BRANCH == "staging"'
      changes:
      - docker/**/*
      - api.rest/**/*
      - api.common/**/*
      - .gitlab-ci.yml
      when: manual

deploy-data-pipeline-staging:
  stage: Build_Deploy
  tags:
    - saas-linux-small-amd64
  image:
    name: $DATA_PIPELINE_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG
  script:
  - cd api.common
  - python -m pip install pyopenssl --upgrade
  - python setup.py install
  - python -m loop.secrets_generator
  - python setup.py sdist bdist_wheel
  - cd ../data.pipeline
  - make deploy Environment=staging
  rules:
    - if: '$CI_COMMIT_BRANCH == "staging"'
      changes:
      - docker/**/*
      - data.pipeline/**/*
      - api.common/**/*
      - .gitlab-ci.yml
      when: manual

# Prod
# ----------------------------------------------------------------------------------------------------------------------
deploy-api-rest-prod:
  stage: Build_Deploy
  tags:
    - saas-linux-small-amd64
  image:
    name: $API_REST_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG
  variables:
    API_VERSION: $CI_COMMIT_TAG
  script:
  # Install package and dependencies (e.g. boto) for api.common
  - cd api.common
  - python -m pip install pyopenssl --upgrade
  - python setup.py install
  - python -m loop.secrets_generator
  # Generate artifact
  - python setup.py sdist bdist_wheel
  # Build the chalice app
  - cd ../api.rest
  - make clean
  - make build STAGE=prod
  # Deploy to AWS
  - make deploy STAGE=prod
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]*\.[0-9]*\.[0-9]*$/'
      changes:
      - docker/**/*
      - api.rest/**/*
      - api.common/**/*
      - .gitlab-ci.yml
      when: manual

deploy-auth-api-rest-prod:
  stage: Build_Deploy
  tags:
    - saas-linux-small-amd64
  image:
    name: $API_REST_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG
  variables:
    API_VERSION: $CI_COMMIT_TAG
  script:
  # Install package and dependencies (e.g. boto) for api.common
  - cd api.common
  - python -m pip install pyopenssl --upgrade
  - python setup.py install
  - python -m loop.secrets_generator
  # Generate artifact
  - python setup.py sdist bdist_wheel
  # Build the chalice app
  - cd ../api.rest
  - make clean-auth
  - make build-auth STAGE=prod
  # Deploy to AWS
  - make deploy-auth STAGE=prod
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]*\.[0-9]*\.[0-9]*$/'
      changes:
      - docker/**/*
      - api.rest/**/*
      - api.common/**/*
      - .gitlab-ci.yml
      when: manual

deploy-data-pipeline-prod:
  stage: Build_Deploy
  tags:
    - saas-linux-small-amd64
  image:
    name: $DATA_PIPELINE_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG
  script:
  - cd api.common
  - python -m pip install pyopenssl --upgrade
  - python setup.py install
  - python -m loop.secrets_generator
  - python setup.py sdist bdist_wheel
  - cd ../data.pipeline
  - make deploy Environment=prod
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]*\.[0-9]*\.[0-9]*$/'
      changes:
      - docker/**/*
      - data.pipeline/**/*
      - api.common/**/*
      - .gitlab-ci.yml
      when: manual
