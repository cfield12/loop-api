variables:
  CI_IMAGE_PATH: registry.gitlab.com/charlie.field98/back-end
  API_COMMON_CI_IMAGE_NAME: $CI_IMAGE_PATH/api-common-ci-image
  API_REST_CI_IMAGE_NAME: $CI_IMAGE_PATH/api-rest-ci-image
  AWS_DEFAULT_REGION: eu-west-2
  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY

stages:
  - Ci_Setup
  - Lint
  - Test
  - Build_Deploy

# Stage: "CI Setup"
# ----------------------------------------------------------------------------------------------------------------------
build-api-common-ci-image:
  stage: Ci_Setup
  image: docker
  services:
    - docker:dind
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker build -t $API_COMMON_CI_IMAGE_NAME:$CI_PIPELINE_IID -f docker/api_common/Dockerfile -t $API_COMMON_CI_IMAGE_NAME:$CI_PIPELINE_IID .
    - docker push $API_COMMON_CI_IMAGE_NAME:$CI_PIPELINE_IID
  rules:
    - changes:
      - docker/**/*
      - .gitlab-ci.yml
      - api.common/requirements.txt
      - api.common/**/*

build-api-rest-ci-image:
  stage: Ci_Setup
  image: docker
  services:
    - docker:dind
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker build -t $API_REST_CI_IMAGE_NAME:$CI_PIPELINE_IID -f docker/api_rest/Dockerfile -t $API_REST_CI_IMAGE_NAME:$CI_PIPELINE_IID .
    - docker push $API_REST_CI_IMAGE_NAME:$CI_PIPELINE_IID
  rules:
    - changes:
      - docker/**/*
      - .gitlab-ci.yml
      - api.common/**/*
      - api.rest/**/*

# Stage: Lint
# ----------------------------------------------------------------------------------------------------------------------
lint-api-common:
  stage: Lint
  tags:
    - docker
  image:
    name: $API_COMMON_CI_IMAGE_NAME:$CI_PIPELINE_IID
  script:
  - cd api.common
  - python -m pip install pycodestyle==2.8.0
  - pycodestyle --config=.pycodestyle loop
  rules:
    - changes:
      - api.common/**/*
      - .gitlab-ci.yml

lint-api-rest:
  stage: Lint
  tags:
    - docker
  image:
    name: $API_REST_CI_IMAGE_NAME:$CI_PIPELINE_IID
  script:
  - cd api.rest
  - python -m pip install pycodestyle==2.8.0
  - pycodestyle --config=.pycodestyle loop-api --exclude=loop-api/vendor
  rules:
    - changes:
      - api.rest/**/*
      - .gitlab-ci.yml

# Stage: Test
# ----------------------------------------------------------------------------------------------------------------------
test-api-common:
  stage: Test
  tags:
    - docker
  variables:
    ENVIRONMENT: test
  image:
    name: $API_COMMON_CI_IMAGE_NAME:$CI_COMMIT_REF_SLUG
  script:
   - cd api.common
   - python setup.py sdist bdist_wheel
   - python -m pip install pytest==8.1.1 pytest-cov==5.0.0
   - python -m pytest --cov=loop --cov-fail-under=80
  rules:
    - changes:
      - api.common/**/*
      - .gitlab-ci.yml
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
      when: always
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "staging"'
      when: always
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "production"'
      when: always

test-api-rest:
  stage: Test
  tags:
    - docker
  variables:
    ENVIRONMENT: test
    LOOP_AUTH_DISABLED: 1
    TEST: 1
  before_script:
    - cd api.rest
  image:
    name: $API_REST_CI_IMAGE_NAME:$CI_PIPELINE_IID
  script:
    - python -m pytest tests/ --cov=loop-api/
  rules:
    - changes:
      - docker/**/*
      - api.common/**/*
      - api.rest/**/*
      - .gitlab-ci.yml
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
      when: always
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "staging"'
      when: always
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "production"'
      when: always
